<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="description" content="A web interface for MQTT">
    <meta name="author" content="Fabian Affolter">

    <title>Lab Conditions</title>

    <!-- Bootstrap core CSS -->
    <link href="http://maxcdn.bootstrapcdn.com/bootstrap/3.2.0/css/bootstrap.min.css" rel="stylesheet">
    <!-- jQuery -->
    <script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.0/jquery.min.js"></script>
    <!-- Sparkline -->
    <script type="text/javascript" src="javascripts/jquery.sparkline.min.js"></script>
    <!-- jgPlot -->
    <link class="include" rel="stylesheet" type="text/css" href="stylesheets/jquery.jqplot.min.css" />
    <script type="text/javascript" src="javascripts/jquery.jqplot.min.js"></script>
    <script type="text/javascript" src="javascripts/jqplot.canvasTextRenderer.min.js"></script>
    <script type="text/javascript" src="javascripts/jqplot.canvasAxisLabelRenderer.min.js"></script>
    <script type="text/javascript" src="javascripts/jqplot.dateAxisRenderer.min.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script type="text/javascript" src="javascripts/sensor-data.js"></script>


    <!-- socket.io for communication -->
    <!--
    <script type="text/javascript">
        var mq5 = new Array();
        var mq7 = new Array();
        var mq131 = new Array();
        var mq135 = new Array();
        var headCount = new Array();
	      var socket = io.connect();
        //var socket = io.connect('http://localhost:5000');
            socket.on('connect', function () {
                socket.on('mqtt', function (msg) {
                    var message = msg.topic.split('/');
                    var area = message[1];

                    console.log(String.fromCharCode.apply(null, new Uint8Array(msg.payload)));

                    var payload = String.fromCharCode.apply(null, new Uint8Array(msg.payload));

                    var timestamp = Math.round((new Date()).getTime() / 1000);

                    $('#topic').html(msg.topic);
                    $('#message').html(msg.topic + ', ' + payload);
                    switch (area) {


                        case 'audio':
                            $('#audio_result').html('(Sound: ' + payload + ')');

                            $('#sound').text(payload);
                            $('#sound').removeClass('label-danger').addClass('label-success');

                            break;
                        case 'yolo':
                            $('#yolo_result').html('(Object: ' + payload + ')');

                            $('#object').text(payload);
                            $('#object').removeClass('label-danger').addClass('label-success');

                            break;
                        case 'pir':
                            $('#pir_value').html('(Sense value: ' + payload + ')');
                            if (payload == '0') {
                                $('#pir').text('Nothing');
                                $('#pir').removeClass('label-danger').addClass('label-success');
                            } else {
                                $('#pir').text('Motion detected');
                                $('#pir').removeClass('label-success').addClass('label-danger');
                            }
                            break;
                        case 'mq5':
                            var mq5_value = (parseFloat(payload))+"";
                            $('#mq5Sensor').html('(Sensor value: ' + mq5_value + ')');
                            $('#mq5Label').text(mq5_value);
                            $('#mq5Label').removeClass('').addClass('label-default');

                            var entry = new Array();
                            entry.push(timestamp);
                            entry.push(parseFloat(payload));
                            mq5.push(entry);
                            // Show only 20 values
                            if (mq5.length >= 20) {
                                mq5.shift()
                            }

                            var mq5Plot = $.jqplot ('mq5Chart', [mq5], {
                                axesDefaults: {
                                    labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
                                    tickOptions: {
                                        showMark: false,
                                        showGridline: false,
                                        show: false,
                                        showLabel: false,
                                    }
                                  },
                                grid: {
                                    gridLineColor: '#FFFFFF',
                                    borderWidth: 0,
                                    shadow: false,
                                },
                                seriesDefaults: {
                                    rendererOptions: {
                                        smooth: true
                                    },
                                    showMarker: false,
                                    lineWidth: 2,
                                  },
                                  axes: {
                                    xaxis: {
                                      renderer:$.jqplot.DateAxisRenderer,
                                      tickOptions:{
                                        formatString:'%T'
                                      },
                                      pad: 0
                                    },
                                    yaxis: {
                                        tickOptions:{
                                            formatString: '%.1f'
                                        }
                                    }
                                }
                            });
                            break;
                        case 'mq7':
                            var mq7_value = (parseFloat(payload))+"";
                            $('#mq7Sensor').html('(Sensor value: ' + mq7_value + ')');
                            $('#mq7Label').text(mq7_value);
                            $('#mq7Label').removeClass('').addClass('label-default');

                            var entry = new Array();
                            entry.push(timestamp);
                            entry.push(parseFloat(payload));
                            mq7.push(entry);
                            // Show only 20 values
                            if (mq7.length >= 20) {
                                mq7.shift()
                            }

                            var mq7Plot = $.jqplot ('mq7Chart', [mq7], {
                                axesDefaults: {
                                    labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
                                    tickOptions: {
                                        showMark: false,
                                        showGridline: false,
                                        show: false,
                                        showLabel: false,
                                    }
                                  },
                                grid: {
                                    gridLineColor: '#FFFFFF',
                                    borderWidth: 0,
                                    shadow: false,
                                },
                                seriesDefaults: {
                                    rendererOptions: {
                                        smooth: true
                                    },
                                    showMarker: false,
                                    lineWidth: 2,
                                  },
                                  axes: {
                                    xaxis: {
                                      renderer:$.jqplot.DateAxisRenderer,
                                      tickOptions:{
                                        formatString:'%T'
                                      },
                                      pad: 0
                                    },
                                    yaxis: {
                                        tickOptions:{
                                            formatString: '%.1f'
                                        }
                                    }
                                }
                            });
                            break;
                        case 'mq131':
                                var mq131_value = (parseFloat(payload))+"";
                                $('#mq131Sensor').html('(Sensor value: ' + mq131_value + ')');
                                $('#mq131Label').text(mq131_value);
                                $('#mq131Label').removeClass('').addClass('label-default');

                                var entry = new Array();
                                entry.push(timestamp);
                                entry.push(parseFloat(payload));
                                mq131.push(entry);
                                // Show only 20 values
                                if (mq131.length >= 20) {
                                    mq131.shift()
                                }

                                var mq131Plot = $.jqplot ('mq131Chart', [mq131], {
                                    axesDefaults: {
                                        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
                                        tickOptions: {
                                            showMark: false,
                                            showGridline: false,
                                            show: false,
                                            showLabel: false,
                                        }
                                      },
                                    grid: {
                                        gridLineColor: '#FFFFFF',
                                        borderWidth: 0,
                                        shadow: false,
                                    },
                                    seriesDefaults: {
                                        rendererOptions: {
                                            smooth: true
                                        },
                                        showMarker: false,
                                        lineWidth: 2,
                                      },
                                      axes: {
                                        xaxis: {
                                          renderer:$.jqplot.DateAxisRenderer,
                                          tickOptions:{
                                            formatString:'%T'
                                          },
                                          pad: 0
                                        },
                                        yaxis: {
                                            tickOptions:{
                                                formatString: '%.1f'
                                            }
                                        }
                                    }
                                });
                                break;
                        case 'mq135':
                                var mq135_value = (parseFloat(payload))+"";
                                $('#mq135Sensor').html('(Sensor value: ' + mq135_value + ')');
                                $('#mq135Label').text(mq135_value);
                                $('#mq135Label').removeClass('').addClass('label-default');

                                var entry = new Array();
                                entry.push(timestamp);
                                entry.push(parseFloat(payload));
                                mq135.push(entry);
                                // Show only 20 values
                                if (mq135.length >= 20) {
                                    mq135.shift()
                                }

                                var mq135Plot = $.jqplot ('mq135Chart', [mq135], {
                                    axesDefaults: {
                                        labelRenderer: $.jqplot.CanvasAxisLabelRenderer,
                                        tickOptions: {
                                            showMark: false,
                                            showGridline: false,
                                            show: false,
                                            showLabel: false,
                                        }
                                      },
                                    grid: {
                                        gridLineColor: '#FFFFFF',
                                        borderWidth: 0,
                                        shadow: false,
                                    },
                                    seriesDefaults: {
                                        rendererOptions: {
                                            smooth: true
                                        },
                                        showMarker: false,
                                        lineWidth: 2,
                                      },
                                      axes: {
                                        xaxis: {
                                          renderer:$.jqplot.DateAxisRenderer,
                                          tickOptions:{
                                            formatString:'%T'
                                          },
                                          pad: 0
                                        },
                                        yaxis: {
                                            tickOptions:{
                                                formatString: '%.1f'
                                            }
                                        }
                                    }
                                });
                                break;

                        default: console.log('Error: Data do not match the MQTT topic.'); break;
                    }
         });
         socket.emit('subscribe', {topic : 'lab/#'});
        });
    </script>
    -->

  </head>

  <body>
    <div id="wrap">
      <div class="container">
        <div class="page-header"><h1><b>Lab Conditions</b></h1></div>

            <div class="panel panel-default">
              <div class="panel-body">
                    <table class="table table-striped">

                        <!-- Sound Classification -->
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>Sound Classification</h3><small id="audio_result">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"></td>
                          <td width="30%" style="vertical-align:middle;"><h3>&nbsp;<span id="sound" class="label">Unknown</span></h3></td>
                        </tr>

                        <!-- Object Detection -->
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>Object Detection</h3><small id="yolo_result">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"></td>
                          <td width="30%" style="vertical-align:middle;"><h3>&nbsp;<span id="object" class="label">Unknown</span></h3></td>
                        </tr>

                        <!-- PIR sensor -->
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>Intrusion detection</h3><small id="pir_value">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"></td>
                          <td width="30%" style="vertical-align:middle;"><h4>&nbsp;<span id="pir" class="label">Unknown</span></h4></td>
                        </tr>



                        <!-- MQ5 -->
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>MQ5</h3><small id="mq5Sensor">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"><div id="mq5Chart" style="height:80px; width:300px;"></div></td>
                          <td width="30%" style="vertical-align:middle;"><h4>&nbsp;<span id="mq5Label" class="label">Unknown</span></h4></td>
                        </tr>

                        <!-- MQ7 -->
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>MQ7</h3><small id="mq7Sensor">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"><div id="mq7Chart" style="height:80px; width:300px;"></div></td>
                          <td width="30%" style="vertical-align:middle;"><h4>&nbsp;<span id="mq7Label" class="label">Unknown</span></h4></td>
                        </tr>

                        <!-- MQ131 -->
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>MQ131</h3><small id="mq131Sensor">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"><div id="mq131Chart" style="height:80px; width:300px;"></div></td>
                          <td width="30%" style="vertical-align:middle;"><h4>&nbsp;<span id="mq131Label" class="label">Unknown</span></h4></td>
                        </tr>

                        <!-- MQ135 -->
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>MQ135</h3><small id="mq135Sensor">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"><div id="mq135Chart" style="height:80px; width:300px;"></div></td>
                          <td width="30%" style="vertical-align:middle;"><h4>&nbsp;<span id="mq135Label" class="label">Unknown</span></h4></td>
                        </tr>

                        <!-- Head Count -->
                        <!--
                        <tr>
                          <td width="40%" style="vertical-align:middle;"><h3>Head Count</h3><small id="value3">(no value recieved)</small></td>
                          <td style="vertical-align:middle;"><div id="headCountChart" style="height:80px; width:300px;"></div></td>
                          <td width="30%" style="vertical-align:middle;"><h4>&nbsp;<span id="value3Label" class="label">Unknown</span></h4></td>
                        </tr>
                        -->

                    </table>
              </div>
            </div>
          <div class="panel panel-default">
            <div class="panel-body">
                    <b>Latest MQTT message:  </b> <small id="message">no message recieved</small>
            </div>
          </div>

        <div class="footer">
    </div>
  </body>
</html>
